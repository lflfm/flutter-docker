# 1. Set up the following secrets in your workspace: 
#     a. DOCKER_PUSH_USERNAME
#     b. DOCKER_PUSH_PASSWORD
# 2. Review the environment variables section below
# 3. Review the working directory

name: Push container to DockerHub

on:
  workflow_dispatch: #allow manual trigger - https://docs.github.com/en/actions/reference/events-that-trigger-workflows#workflow_dispatch
    inputs:
      containerTag:
        description: 'Which tag to use, leave blank to use GitHub branch name as tag'
        required: false
        default: 'latest'

# Environment variables available to all jobs and steps in this workflow
env:
  REPO_IMAGE_NAME: lflfm/flutter

defaults:
  run:
    working-directory: ./
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@main

    - name: Get git branch name
      id: git-branch-name
      uses: lflfm/git-branch-name-action@v1

    - name: Echo the branch name (just to test / document)
      run: echo "Branch name ${GIT_BRANCH_NAME}"

    - name: Set tag from branch name
      run: |
        echo "CONTAINER_TAG=${{env.GIT_BRANCH_NAME}}" >> $GITHUB_ENV
      if: ${{ github.event.inputs.containerTag == '' }}

    - name: Set tag from input
      run: |
        echo "CONTAINER_TAG=${{github.event.inputs.containerTag}}" >> $GITHUB_ENV
      if: ${{ github.event.inputs.containerTag != '' }}

    - name: Print tag
      run: echo "Container will be tagged with ${{ env.CONTAINER_TAG }}"

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        #registry: ${{ env.REGISTRY_LOGIN_SERVER }} no need to specify the registry when it's DockerHub
        username: ${{ secrets.DOCKER_PUSH_USERNAME }}
        password: ${{ secrets.DOCKER_PUSH_PASSWORD }}

    - name: Build image
      run: |
        docker build . -t ${{ env.REPO_IMAGE_NAME }}:${{ env.CONTAINER_TAG }}

    - name: Push image
      run: |
        docker push ${{ env.REPO_IMAGE_NAME }}:${{ env.CONTAINER_TAG }}